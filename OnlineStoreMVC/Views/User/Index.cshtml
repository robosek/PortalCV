@model PagedList.IPagedList<OnlineStoreMVC.Models.UserViewModel>
@using Microsoft.AspNet.Identity
@using PagedList.Mvc;
@{
    OnlineStoreMVC.Models.UserViewModel c = new OnlineStoreMVC.Models.UserViewModel();
    ViewData["PageID"] = "Main";
}
@{String urlString = null;}



<style>
    table {
       font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    }
   
     
</style>





<h2><small>Ostatnie logowania obecnych użytkowników</small></h2>

<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => c.Nickname)
            </th>
            <th>
                @Html.DisplayNameFor(model => c.LastIPAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => c.VisitCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => c.BrowserType)
            </th>
            <th>
                @Html.DisplayNameFor(model => c.LastDateTime)
            </th>

            <th>
                @Html.DisplayName("Zdjęcie")
            </th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nickname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastIPAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VisitCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BrowserType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastDateTime)
                </td>


            <td>
                @if (System.IO.File.Exists(Server.MapPath("/Content/Uploads/Users/" + "min_" + item.Nickname + ".jpg")))
                {
                    <img src="@Url.Content("~/Content/Uploads/Users/" + "min_" + item.Nickname + ".jpg")" alt="@item.Name @item.Surname" width="60" height="60" class="img-rounded img-responsive"/>

                }
                else
                {
                    <img src="@Url.Content("~/Content/Uploads/Users/unknown.png")" alt="@item.Name @item.Surname" width="60" height="60" class="img-rounded img-responsive"/>
                }

            </td>
            <td>

                @if ((bool)ViewData[item.Nickname])
                {
                    @Html.ActionLink("Usuń z admina", "DeleteFromAdmin", "User", new {userName = item.Nickname},new {@class = "btn-default   btn btn-default btn-sm"})
                }
                else
                {
                    @Html.ActionLink("Dodaj admina", "AddToAdmin", "User", new {userName = item.Nickname}, new {@class = "btn-default   btn btn-default btn-sm"})
                    
                }
                




                <input type="button" class="btn-default   btn btn-default btn-sm" value="Szczegóły" data-toggle="modal" data-target="#@item.UserID"/>
                <div class="modal fade" id="@item.UserID" tabindex="-1" role="alertdialog" aria-hidden="true">

                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                <h4 class="modal-title">Edycja użytkownika</h4>
                            </div>
                            <div class="modal-body">
                                <ul class="nav nav-tabs">
                                    <li class="active">
                                        <a href="#@item.UserID@item.Nickname" data-toggle="tab">
                                            Dane Użytkownika
                                        </a>

                                    </li>
                                    <li><a href="#@item.Nickname" data-toggle="tab">Kontakt</a></li>
                                </ul>
                                <div class="tab-content well">
                                    <div class="tab-pane active" id="@item.UserID@item.Nickname" style="text-align: right">

                                        <div class="form-horizontal" role="form">
                                            <div class="form-group">
                                                @Html.LabelFor(model => c.ImagePath, new {@class = "control-label col-md-2"})
                                                @if (!System.IO.File.Exists(Server.MapPath("/Content/Uploads/Users/min_" + item.Nickname + ".jpg")))
                                                {
                                                    urlString = Url.Content("~/Content/Uploads/Users/unknown.png");
                                                }
                                                else
                                                {
                                                    urlString = Url.Content("~/Content/Uploads/Users/min_" + item.Nickname + ".jpg");
                                                }
                                                <div class="col-md-7 input-group">
                                                    <img src="@urlString" alt="Profil" class="img-rounded img-responsive" width="100" height="100"/>

                                                </div>

                                            </div>

                                            <div class="form-group">

                                                @Html.LabelFor(model => c.Name, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Name", (item.Name == null) ? "" : item.Name, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => c.Secondname, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Secondname", (item.Secondname == null) ? " " : item.Secondname, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => c.Surname, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Surname", (item.Surname == null) ? " " : item.Surname, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>
                                            <br/>
                                            @if (!urlString.Contains("unknown.png"))
                                            {<div class="form-group" style="text-align: left;">


                                                 <div id="deleteImage">
                                                     @{Html.RenderPartial("_PhotoPath", ViewData["username"] = item.Nickname);}
                                                 </div>
                                             </div>
                                            }

                                        </div>


                                    </div>

                                    <div class="tab-pane" id="@item.Nickname">
                                        <div class="form-horizontal" role="form">
                                            <div class="form-group">

                                                @Html.LabelFor(model => c.PhoneNumber, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Phone number", (item.PhoneNumber == null) ? "" : item.PhoneNumber, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>
                                            <div class="form-group">

                                                @Html.LabelFor(model => c.CellNumber, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Cell number", (item.CellNumber == null) ? "" : item.CellNumber, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>
                                            <div class="form-group">

                                                @Html.LabelFor(model => c.Address, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Address", (item.Address == null) ? "" : item.Address, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>
                                            <div class="form-group">

                                                @Html.LabelFor(model => c.PostalCode, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Posta Code", (item.PostalCode == null) ? "" : item.PostalCode, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>
                                            <div class="form-group">

                                                @Html.LabelFor(model => c.City, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("City", (item.City == null) ? "" : item.City, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>
                                            <div class="form-group">

                                                @Html.LabelFor(model => c.Country, new {@class = "control-label col-md-2"})
                                                <div class="col-md-7 input-group">
                                                    @Html.TextBox("Country", (item.Country == null) ? "" : item.Country, new {@class = "form-control", @readonly = "readonly"})
                                                </div>
                                            </div>


                                        </div>
                                    </div>

                                </div>


                            </div>
                            <div class="modal-footer">

                                <button type="button" class="btn btn-primary"
                                        data-dismiss="modal">
                                    Zamknij
                                </button>
                            </div>
                        </div>
                    </div>
                </div>






                <input type="button" class="btn-danger  btn btn-default btn-sm" value="Usuń" data-toggle="modal" data-target="#deleteConfirmationModal"/>
                <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-hidden="true">

                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                <h4 class="modal-title">Usunięcie użytkownika</h4>
                            </div>
                            <div class="modal-body">
                                <p>
                                    Za chwilę nastąpi usunięcie użytkownika

                                </p>
                                <p>
                                    <strong>
                                        Czy jesteś pewien że chcesz usunąć użytkownika?
                                    </strong>
                                </p>
                                @using (Html.BeginForm("Delete", "User", FormMethod.Post, new {role = "form", @id = "delete-form"}))
                                {
                                    @Html.Hidden("id", item.UserID)
                                    @Html.AntiForgeryToken()

                                }
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default"
                                        onclick="$('#delete-form').submit();">
                                    Tak, usuń użytkownika
                                </button>
                                <button type="button" class="btn btn-primary"
                                        data-dismiss="modal">
                                    Nie, nie usuwaj
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
            </tr>
        }

    </tbody>
</table>
<br />
<div style="text-align:center;">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
</div>

@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page
}), PagedListRenderOptions.TwitterBootstrapPager)

